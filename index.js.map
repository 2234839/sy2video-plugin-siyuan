{"version":3,"file":"index.js","sources":["../../src/libs/api.ts","../../src/libs/chat_tts.ts","../../src/libs/siyuanPlugin.ts","../../src/sy2video-plugin-siyuan/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2023 frostime. All rights reserved.\n * https://github.com/frostime/sy-plugin-template-vite\n *\n * See API Document in [API.md](https://github.com/siyuan-note/siyuan/blob/master/API.md)\n * API 文档见 [API_zh_CN.md](https://github.com/siyuan-note/siyuan/blob/master/API_zh_CN.md)\n */\n\nimport { fetchSyncPost, IWebSocketData } from \"siyuan\";\n\nasync function request(url: string, data: any) {\n  let response: IWebSocketData = await fetchSyncPost(url, data);\n  let res = response.code === 0 ? response.data : null;\n  return res;\n}\n\n// **************************************** Noteboook ****************************************\n\nexport async function lsNotebooks(): Promise<IReslsNotebooks> {\n  let url = \"/api/notebook/lsNotebooks\";\n  return request(url, \"\");\n}\n\nexport async function openNotebook(notebook: NotebookId) {\n  let url = \"/api/notebook/openNotebook\";\n  return request(url, { notebook: notebook });\n}\n\nexport async function closeNotebook(notebook: NotebookId) {\n  let url = \"/api/notebook/closeNotebook\";\n  return request(url, { notebook: notebook });\n}\n\nexport async function renameNotebook(notebook: NotebookId, name: string) {\n  let url = \"/api/notebook/renameNotebook\";\n  return request(url, { notebook: notebook, name: name });\n}\n\nexport async function createNotebook(name: string): Promise<Notebook> {\n  let url = \"/api/notebook/createNotebook\";\n  return request(url, { name: name });\n}\n\nexport async function removeNotebook(notebook: NotebookId) {\n  let url = \"/api/notebook/removeNotebook\";\n  return request(url, { notebook: notebook });\n}\n\nexport async function getNotebookConf(notebook: NotebookId): Promise<IResGetNotebookConf> {\n  let data = { notebook: notebook };\n  let url = \"/api/notebook/getNotebookConf\";\n  return request(url, data);\n}\n\nexport async function setNotebookConf(\n  notebook: NotebookId,\n  conf: NotebookConf,\n): Promise<NotebookConf> {\n  let data = { notebook: notebook, conf: conf };\n  let url = \"/api/notebook/setNotebookConf\";\n  return request(url, data);\n}\n\n// **************************************** File Tree ****************************************\nexport async function createDocWithMd(\n  notebook: NotebookId,\n  path: string,\n  markdown: string,\n): Promise<DocumentId> {\n  let data = {\n    notebook: notebook,\n    path: path,\n    markdown: markdown,\n  };\n  let url = \"/api/filetree/createDocWithMd\";\n  return request(url, data);\n}\n\nexport async function renameDoc(\n  notebook: NotebookId,\n  path: string,\n  title: string,\n): Promise<DocumentId> {\n  let data = {\n    doc: notebook,\n    path: path,\n    title: title,\n  };\n  let url = \"/api/filetree/renameDoc\";\n  return request(url, data);\n}\n\nexport async function removeDoc(notebook: NotebookId, path: string) {\n  let data = {\n    notebook: notebook,\n    path: path,\n  };\n  let url = \"/api/filetree/removeDoc\";\n  return request(url, data);\n}\n\nexport async function moveDocs(fromPaths: string[], toNotebook: NotebookId, toPath: string) {\n  let data = {\n    fromPaths: fromPaths,\n    toNotebook: toNotebook,\n    toPath: toPath,\n  };\n  let url = \"/api/filetree/moveDocs\";\n  return request(url, data);\n}\n\nexport async function getHPathByPath(notebook: NotebookId, path: string): Promise<string> {\n  let data = {\n    notebook: notebook,\n    path: path,\n  };\n  let url = \"/api/filetree/getHPathByPath\";\n  return request(url, data);\n}\n\nexport async function getHPathByID(id: BlockId): Promise<string> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/filetree/getHPathByID\";\n  return request(url, data);\n}\n\n// **************************************** Asset Files ****************************************\n\nexport async function upload(assetsDirPath: string, files: string | Blob[]): Promise<IResUpload> {\n  let form = new FormData();\n  form.append(\"assetsDirPath\", assetsDirPath);\n  for (let file of files) {\n    form.append(\"file[]\", file);\n  }\n  let url = \"/api/asset/upload\";\n  return request(url, form);\n}\n\n// **************************************** Block ****************************************\ntype DataType = \"markdown\" | \"dom\";\nexport async function insertBlock(\n  dataType: DataType,\n  data: string,\n  nextID?: BlockId,\n  previousID?: BlockId,\n  parentID?: BlockId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    nextID: nextID,\n    previousID: previousID,\n    parentID: parentID,\n  };\n  let url = \"/api/block/insertBlock\";\n  return request(url, payload);\n}\n\nexport async function prependBlock(\n  dataType: DataType,\n  data: string,\n  parentID: BlockId | DocumentId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    parentID: parentID,\n  };\n  let url = \"/api/block/prependBlock\";\n  return request(url, payload);\n}\n\nexport async function appendBlock(\n  dataType: DataType,\n  data: string,\n  parentID: BlockId | DocumentId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    parentID: parentID,\n  };\n  let url = \"/api/block/appendBlock\";\n  return request(url, payload);\n}\n\nexport async function updateBlock(\n  dataType: DataType,\n  data: string,\n  id: BlockId,\n): Promise<IResdoOperations[]> {\n  let payload = {\n    dataType: dataType,\n    data: data,\n    id: id,\n  };\n  let url = \"/api/block/updateBlock\";\n  return request(url, payload);\n}\n\nexport async function deleteBlock(id: BlockId): Promise<IResdoOperations[]> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/block/deleteBlock\";\n  return request(url, data);\n}\n\nexport async function moveBlock(\n  id: BlockId,\n  previousID?: PreviousID,\n  parentID?: ParentID,\n): Promise<IResdoOperations[]> {\n  let data = {\n    id: id,\n    previousID: previousID,\n    parentID: parentID,\n  };\n  let url = \"/api/block/moveBlock\";\n  return request(url, data);\n}\n\nexport async function getBlockKramdown(id: BlockId): Promise<IResGetBlockKramdown> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/block/getBlockKramdown\";\n  return request(url, data);\n}\n\nexport async function getChildBlocks(id: BlockId): Promise<IResGetChildBlock[]> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/block/getChildBlocks\";\n  return request(url, data);\n}\n\nexport async function transferBlockRef(fromID: BlockId, toID: BlockId, refIDs: BlockId[]) {\n  let data = {\n    fromID: fromID,\n    toID: toID,\n    refIDs: refIDs,\n  };\n  let url = \"/api/block/transferBlockRef\";\n  return request(url, data);\n}\n\n// **************************************** Attributes ****************************************\nexport async function setBlockAttrs(id: BlockId, attrs: { [key: string]: string }) {\n  let data = {\n    id: id,\n    attrs: attrs,\n  };\n  let url = \"/api/attr/setBlockAttrs\";\n  return request(url, data);\n}\n\nexport async function getBlockAttrs(id: BlockId): Promise<{ [key: string]: string }> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/attr/getBlockAttrs\";\n  return request(url, data);\n}\n\n// **************************************** SQL ****************************************\n\nexport async function sql(sql: string): Promise<any[]> {\n  let sqldata = {\n    stmt: sql,\n  };\n  let url = \"/api/query/sql\";\n  return request(url, sqldata);\n}\n\nexport async function getBlockByID(blockId: string): Promise<Block> {\n  let sqlScript = `select * from blocks where id ='${blockId}'`;\n  let data = await sql(sqlScript);\n  return data[0];\n}\n\n// **************************************** Template ****************************************\n\nexport async function render(id: DocumentId, path: string): Promise<IResGetTemplates> {\n  let data = {\n    id: id,\n    path: path,\n  };\n  let url = \"/api/template/render\";\n  return request(url, data);\n}\n\nexport async function renderSprig(template: string): Promise<string> {\n  let url = \"/api/template/renderSprig\";\n  return request(url, { template: template });\n}\n\n// **************************************** File ****************************************\n\n/**\n * https://github.com/siyuan-note/siyuan/blob/master/API_zh_CN.md#%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6\n * \"/data/box_id/doc_id.sy\"\n */\nexport async function getFile(path: string): Promise<any> {\n  let data = {\n    path: path,\n  };\n  let url = \"/api/file/getFile\";\n  try {\n    let file = await fetchSyncPost(url, data);\n    return file;\n  } catch (error_msg) {\n    throw error_msg\n  }\n}\n\nexport async function putFile(path: string, isDir: boolean, file: any) {\n  let form = new FormData();\n  form.append(\"path\", path);\n  form.append(\"isDir\", isDir.toString());\n  // Copyright (c) 2023, terwer.\n  // https://github.com/terwer/siyuan-plugin-importer/blob/v1.4.1/src/api/kernel-api.ts\n  form.append(\"modTime\", Math.floor(Date.now() / 1000).toString());\n  form.append(\"file\", file);\n  let url = \"/api/file/putFile\";\n  return request(url, form);\n}\n\nexport async function removeFile(path: string) {\n  let data = {\n    path: path,\n  };\n  let url = \"/api/file/removeFile\";\n  return request(url, data);\n}\n\nexport async function readDir(path: string): Promise<IResReadDir> {\n  let data = {\n    path: path,\n  };\n  let url = \"/api/file/readDir\";\n  return request(url, data);\n}\n\n// **************************************** Export ****************************************\n\nexport async function exportMdContent(id: DocumentId): Promise<IResExportMdContent> {\n  let data = {\n    id: id,\n  };\n  let url = \"/api/export/exportMdContent\";\n  return request(url, data);\n}\n\nexport async function exportResources(paths: string[], name: string): Promise<IResExportResources> {\n  let data = {\n    paths: paths,\n    name: name,\n  };\n  let url = \"/api/export/exportResources\";\n  return request(url, data);\n}\n\n// **************************************** Convert ****************************************\n\nexport type PandocArgs = string;\nexport async function pandoc(args: PandocArgs[]) {\n  let data = {\n    args: args,\n  };\n  let url = \"/api/convert/pandoc\";\n  return request(url, data);\n}\n\n// **************************************** Notification ****************************************\n\n// /api/notification/pushMsg\n// {\n//     \"msg\": \"test\",\n//     \"timeout\": 7000\n//   }\nexport async function pushMsg(msg: string, timeout: number = 7000) {\n  let payload = {\n    msg: msg,\n    timeout: timeout,\n  };\n  let url = \"/api/notification/pushMsg\";\n  return request(url, payload);\n}\n\nexport async function pushErrMsg(msg: string, timeout: number = 7000) {\n  let payload = {\n    msg: msg,\n    timeout: timeout,\n  };\n  let url = \"/api/notification/pushErrMsg\";\n  return request(url, payload);\n}\n\n// **************************************** Network ****************************************\nexport async function forwardProxy(\n  url: string,\n  method: string = \"GET\",\n  payload: any = {},\n  headers: any[] = [],\n  timeout: number = 7000,\n  contentType: string = \"text/html\",\n): Promise<IResForwardProxy> {\n  let data = {\n    url: url,\n    method: method,\n    timeout: timeout,\n    contentType: contentType,\n    headers: headers,\n    payload: payload,\n  };\n  let url1 = \"/api/network/forwardProxy\";\n  return request(url1, data);\n}\n\n// **************************************** System ****************************************\n\nexport async function bootProgress(): Promise<IResBootProgress> {\n  return request(\"/api/system/bootProgress\", {});\n}\n\nexport async function version(): Promise<string> {\n  return request(\"/api/system/version\", {});\n}\n\nexport async function currentTime(): Promise<number> {\n  return request(\"/api/system/currentTime\", {});\n}\n\nexport async function insertLocalAssets(data: {\n  assetPaths: string[];\n  isUpload: boolean;\n  id: string;\n}): Promise<{\n  succMap: {\n    [assetFileName: string]: string;\n  };\n}> {\n  return request(\"/api/asset/insertLocalAssets\", data);\n}\n","type data = {\r\n  prompt: string;\r\n  voice: number;\r\n  speed: number;\r\n  temperature: number;\r\n  top_p: number;\r\n  top_k: number;\r\n  refine_max_new_token: number;\r\n  infer_max_new_token: number;\r\n  text_seed: number;\r\n  skip_refine: number;\r\n  custom_voice: number;\r\n};\r\ntype par = Partial<data> & { text: string };\r\ntype chatTTS_res = {\r\n  audio_files: {\r\n    audio_duration: number;\r\n    filename: string;\r\n    inference_time: number;\r\n    url: string;\r\n  }[];\r\n  code: number;\r\n  filename: string;\r\n  msg: string;\r\n  url: string;\r\n};\r\n/** 默认 apiURL = http://127.0.0.1:9966/tts */\r\nexport function chatTTS(data: par): Promise<chatTTS_res>;\r\nexport function chatTTS(apiURL: string, data: par): Promise<chatTTS_res>;\r\nexport function chatTTS(...arg: [par] | [string, par]): Promise<chatTTS_res> {\r\n  const [apiURL, data] = arg.length == 2 ? [arg[0], arg[1]] : [\"http://127.0.0.1:9966/tts\", arg[0]];\r\n\r\n  const par = Object.assign(\r\n    {\r\n      text: \"\",\r\n      prompt: \"\",\r\n      voice: \"11.csv\",\r\n      speed: 5,\r\n      temperature: 0.3,\r\n      top_p: 0.7,\r\n      top_k: 20,\r\n      refine_max_new_token: 384,\r\n      infer_max_new_token: 2048,\r\n      text_seed: 42,\r\n      skip_refine: 0,\r\n      custom_voice: 0,\r\n    },\r\n    data,\r\n  );\r\n  const from = new FormData();\r\n  Object.entries(par).forEach(([key, value]) => {\r\n    from.append(key, String(value));\r\n  });\r\n  return fetch(apiURL, {\r\n    body: from,\r\n    method: \"POST\",\r\n  }).then((r) => r.json());\r\n}\r\n","import { Plugin } from \"siyuan\";\r\nexport class SiyuanPlugin extends Plugin {\r\n  // 在 unload 时执行注册的函数\r\n  addUnloadFn(fn: () => void) {\r\n    this.onunloadFn.push(fn);\r\n  }\r\n  onunloadFn: (() => void)[] = [];\r\n  onunload(): void {\r\n    this.onunloadFn.forEach((fn) => fn());\r\n  }\r\n}\r\n","import { appendBlock, upload } from \"~/libs/api\";\r\nimport { chatTTS } from \"~/libs/chat_tts\";\r\nimport \"./view_block.css\";\r\nimport { SiyuanPlugin } from \"~/libs/siyuanPlugin\";\r\n// 引入这个变量后 vite 会自动注入 hot\r\nimport.meta.hot;\r\n\r\nconst classFlag = `sy2video-plugin-siyuan`;\r\n\r\nexport default class sy2video extends SiyuanPlugin {\r\n  async onLayoutReady() {\r\n    // 只显示指定块，自动缩放\r\n    {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const blockId = urlParams.getAll(\"block_id\");\r\n      const block_show = urlParams.get(\"block_show\");\r\n      if (block_show && blockId) {\r\n        this.addFloatLayer({\r\n          x: 0,\r\n          y: 0,\r\n          ids: [...blockId],\r\n        });\r\n        const el: HTMLElement = window.siyuan.blockPanels[0].element;\r\n        //   钉住\r\n        (el.querySelector(`[data-type=\"pin\"]`) as HTMLButtonElement)?.click();\r\n        // protyle-content\r\n        // (el.querySelector(`[data-type=\"pin\"]`)\r\n        setTimeout(() => {\r\n          const contentEL = el.querySelector<HTMLElement>(`.protyle-content`)!;\r\n          const rate_w = window.innerWidth / contentEL.getBoundingClientRect().width;\r\n          const rate_h = window.innerHeight / contentEL.getBoundingClientRect().height;\r\n          const rate = rate_h < rate_w ? rate_h : rate_w;\r\n          contentEL.style.setProperty(\"--scale-factor\", String(rate));\r\n        }, 5000);\r\n        document.body.classList.add(classFlag);\r\n        this.onunloadFn.push(() => {\r\n          document.body.classList.remove(classFlag);\r\n        });\r\n      }\r\n    }\r\n\r\n    // === 块文本转音频\r\n    this.eventBus.on(\"click-blockicon\", (event) => {\r\n      window.siyuan.menus.menu.addItem({\r\n        label: \"转音频\",\r\n        icon: ``,\r\n        click: () => {\r\n          const el = event.detail.blockElements[0];\r\n          const id = el.dataset.nodeId!;\r\n          const text = el.textContent!;\r\n          this.ttsInsert(id, text);\r\n        },\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n  async ttsInsert(id: string, text: string) {\r\n    const res = await chatTTS({\r\n      text,\r\n    });\r\n    const res2 = await fetch(res.audio_files[0].url)\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        return upload(\"/assets/\", [\r\n          new File(\r\n            [blob],\r\n            `${Date.now()}-${Math.random().toString(36).slice(2)}.${res.audio_files[0].url\r\n              .split(\".\")\r\n              .pop()!}`,\r\n          ),\r\n        ]);\r\n      });\r\n    const assets = Object.entries(res2.succMap);\r\n    await Promise.all(\r\n      assets.map(([_, assertName]) => {\r\n        return appendBlock(\r\n          \"markdown\",\r\n          `<audio controls=\"controls\" src=\"${assertName}\" data-src=\"${assertName}\"></audio>`,\r\n          id,\r\n        );\r\n      }),\r\n    );\r\n  }\r\n}\r\n"],"names":["fetchSyncPost","request","url","data","response","upload","assetsDirPath","files","form","file","appendBlock","dataType","parentID","chatTTS","arg","apiURL","par","from","key","value","r","Plugin","SiyuanPlugin","__publicField","fn","classFlag","sy2video","urlParams","blockId","el","_a","contentEL","rate_w","rate_h","rate","event","id","text","res","res2","blob","assets","_","assertName"],"mappings":"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"}